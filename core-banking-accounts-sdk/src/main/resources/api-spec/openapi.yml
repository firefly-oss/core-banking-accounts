openapi: 3.0.1
info:
  title: core-banking-accounts
  description: Banking Accounts Core Application
  contact:
    name: Firefly Software Solutions Inc
    email: dev@getfirefly.io
  version: 1.0.0
servers:
  - url: http://core.catalis.vc/accounts
    description: Development Environment
  - url: /
    description: Local Development Environment
tags:
  - name: Account Notifications
    description: APIs for managing account notifications and alerts
  - name: Account Restrictions
    description: APIs for managing restrictions placed on accounts
  - name: Asset Prices
    description: APIs for managing crypto asset prices
  - name: Accounts
    description: APIs for managing bank accounts within the system
  - name: Account Spaces
    description: APIs for managing account spaces/buckets within bank accounts
  - name: Account Balances
    description: APIs for managing balances associated with a specific bank account
  - name: Account Providers
    description: APIs for managing provider records associated with a specific account
  - name: Account Space Transactions
    description: APIs for managing financial transactions within account spaces
  - name: Account Space Providers
    description: APIs for managing provider records associated with a specific account space
  - name: Account Parameters
    description: APIs for managing parameter records associated with a specific account
  - name: Account Status History
    description: APIs for managing the status history of a specific bank account
paths:
  /api/v1/asset-prices/{assetPriceId}:
    get:
      tags:
        - Asset Prices
      summary: Get Asset Price by ID
      description: Retrieve a specific asset price by its unique identifier.
      operationId: getAssetPrice
      parameters:
        - name: assetPriceId
          in: path
          description: Unique identifier of the asset price
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the asset price
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetPriceDTO'
        '404':
          description: Asset price not found
    put:
      tags:
        - Asset Prices
      summary: Update Asset Price
      description: Update an existing asset price record.
      operationId: updateAssetPrice
      parameters:
        - name: assetPriceId
          in: path
          description: Unique identifier of the asset price to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetPriceDTO'
        required: true
      responses:
        '200':
          description: Asset price updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetPriceDTO'
        '404':
          description: Asset price not found
    delete:
      tags:
        - Asset Prices
      summary: Delete Asset Price
      description: Remove an existing asset price record by its unique identifier.
      operationId: deleteAssetPrice
      parameters:
        - name: assetPriceId
          in: path
          description: Unique identifier of the asset price to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Asset price deleted successfully
        '404':
          description: Asset price not found
  /api/v1/accounts/{accountId}/status-history/{historyId}:
    get:
      tags:
        - Account Status History
      summary: Get Account Status History by ID
      description: Retrieve a specific status history record by its unique identifier, ensuring it belongs to the specified account.
      operationId: getStatusHistory
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: historyId
          in: path
          description: Unique identifier of the status history record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the account status history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusHistoryDTO'
        '404':
          description: Status history record not found
    put:
      tags:
        - Account Status History
      summary: Update Account Status History
      description: Update an existing status history record associated with the specified account.
      operationId: updateStatusHistory
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: historyId
          in: path
          description: Unique identifier of the status history record to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStatusHistoryDTO'
        required: true
      responses:
        '200':
          description: Status history record updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusHistoryDTO'
        '404':
          description: Status history record not found
    delete:
      tags:
        - Account Status History
      summary: Delete Account Status History
      description: Remove an existing status history record by its unique identifier.
      operationId: deleteStatusHistory
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: historyId
          in: path
          description: Unique identifier of the status history record to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Status history record deleted successfully
        '404':
          description: Status history record not found
  /api/v1/accounts/{accountId}/spaces/{accountSpaceId}/providers/{providerId}:
    get:
      tags:
        - Account Space Providers
      summary: Get Account Space Provider by ID
      description: Retrieve a specific provider record by its unique identifier, ensuring it belongs to the specified account space.
      operationId: getProviderForSpace
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: providerId
          in: path
          description: Unique identifier of the provider record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the account provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountProviderDTO'
        '404':
          description: Provider record not found
    put:
      tags:
        - Account Space Providers
      summary: Update Account Space Provider
      description: Update an existing provider record associated with the specified account space.
      operationId: updateProviderForSpace
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: providerId
          in: path
          description: Unique identifier of the provider record to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountProviderDTO'
        required: true
      responses:
        '200':
          description: Provider updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountProviderDTO'
        '404':
          description: Provider record not found
    delete:
      tags:
        - Account Space Providers
      summary: Delete Account Space Provider
      description: Remove an existing provider record from the specified account space by its unique identifier.
      operationId: deleteProviderForSpace
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: providerId
          in: path
          description: Unique identifier of the provider record to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Provider deleted successfully
        '404':
          description: Provider record not found
  /api/v1/accounts/{accountId}/providers/{providerId}:
    get:
      tags:
        - Account Providers
      summary: Get Account Provider by ID
      description: Retrieve a specific provider record by its unique identifier, ensuring it belongs to the specified account.
      operationId: getProvider
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: providerId
          in: path
          description: Unique identifier of the provider record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the account provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountProviderDTO'
        '404':
          description: Provider record not found
    put:
      tags:
        - Account Providers
      summary: Update Account Provider
      description: Update an existing provider record associated with the specified account.
      operationId: updateProvider
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: providerId
          in: path
          description: Unique identifier of the provider record to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountProviderDTO'
        required: true
      responses:
        '200':
          description: Provider updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountProviderDTO'
        '404':
          description: Provider record not found
    delete:
      tags:
        - Account Providers
      summary: Delete Account Provider
      description: Remove an existing provider record from the specified account by its unique identifier.
      operationId: deleteProvider
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: providerId
          in: path
          description: Unique identifier of the provider record to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Provider deleted successfully
        '404':
          description: Provider record not found
  /api/v1/accounts/{accountId}/parameters/{paramId}:
    get:
      tags:
        - Account Parameters
      summary: Get Account Parameter by ID
      description: Retrieve a specific parameter record by its unique identifier, ensuring it belongs to the specified account.
      operationId: getParameter
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: paramId
          in: path
          description: Unique identifier of the parameter record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the account parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountParameterDTO'
        '404':
          description: Account parameter not found
    put:
      tags:
        - Account Parameters
      summary: Update Account Parameter
      description: Update an existing parameter record associated with the specified account.
      operationId: updateParameter
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: paramId
          in: path
          description: Unique identifier of the parameter record to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountParameterDTO'
        required: true
      responses:
        '200':
          description: Account parameter updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountParameterDTO'
        '404':
          description: Account parameter not found
    delete:
      tags:
        - Account Parameters
      summary: Delete Account Parameter
      description: Remove an existing parameter record by its unique identifier.
      operationId: deleteParameter
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: paramId
          in: path
          description: Unique identifier of the parameter record to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Account parameter deleted successfully
        '404':
          description: Account parameter not found
  /api/v1/accounts/{accountId}/balances/{balanceId}:
    get:
      tags:
        - Account Balances
      summary: Get Account Balance by ID
      description: Retrieve a specific balance record by its unique identifier, ensuring it belongs to the specified account.
      operationId: getBalance
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: balanceId
          in: path
          description: Unique identifier of the balance record
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the account balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceDTO'
        '404':
          description: Account balance not found
    put:
      tags:
        - Account Balances
      summary: Update Account Balance
      description: Update an existing balance record associated with the specified account.
      operationId: updateBalance
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: balanceId
          in: path
          description: Unique identifier of the balance record to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBalanceDTO'
        required: true
      responses:
        '200':
          description: Account balance updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceDTO'
        '404':
          description: Account balance not found
    delete:
      tags:
        - Account Balances
      summary: Delete Account Balance
      description: Remove an existing balance record by its unique identifier.
      operationId: deleteBalance
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: balanceId
          in: path
          description: Unique identifier of the balance record to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Account balance deleted successfully
        '404':
          description: Account balance not found
  /api/v1/accounts/{accountId}:
    get:
      tags:
        - Accounts
      summary: Get Account by ID
      description: Retrieve an existing bank account by its unique identifier.
      operationId: getAccount
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
    put:
      tags:
        - Accounts
      summary: Update Account
      description: Update the details of an existing bank account by its unique identifier.
      operationId: updateAccount
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
    delete:
      tags:
        - Accounts
      summary: Delete Account
      description: Delete an existing bank account by its unique identifier.
      operationId: deleteAccount
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/account-spaces/{accountSpaceId}/balance:
    put:
      tags:
        - Account Spaces
      summary: Update Account Space Balance
      description: Updates the balance of an account space directly. For administrative adjustments only.
      operationId: updateAccountSpaceBalance
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: newBalance
          in: query
          description: New balance to set
          required: true
          schema:
            type: number
        - name: reason
          in: query
          description: Reason for the balance adjustment
          required: true
          schema:
            type: string
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-spaces/{accountSpaceId}:
    get:
      tags:
        - Account Spaces
      summary: Get Account Space by ID
      description: Retrieve an existing account space by its unique identifier.
      operationId: getAccountSpace
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSpaceDTO'
    put:
      tags:
        - Account Spaces
      summary: Update Account Space
      description: Update the details of an existing account space by its unique identifier.
      operationId: updateAccountSpace
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSpaceDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSpaceDTO'
    delete:
      tags:
        - Account Spaces
      summary: Delete Account Space
      description: Delete an existing account space by its unique identifier. Main spaces cannot be deleted.
      operationId: deleteAccountSpace
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/account-restrictions/{accountRestrictionId}:
    get:
      tags:
        - Account Restrictions
      summary: Get Account Restriction by ID
      description: Retrieve an existing account restriction by its unique identifier.
      operationId: getAccountRestriction
      parameters:
        - name: accountRestrictionId
          in: path
          description: Unique identifier of the account restriction
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the restriction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRestrictionDTO'
        '404':
          description: Restriction not found
    put:
      tags:
        - Account Restrictions
      summary: Update Account Restriction
      description: Update an existing account restriction with the specified details.
      operationId: updateAccountRestriction
      parameters:
        - name: accountRestrictionId
          in: path
          description: Unique identifier of the account restriction to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRestrictionDTO'
        required: true
      responses:
        '200':
          description: Successfully updated the restriction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRestrictionDTO'
        '400':
          description: Invalid input
        '404':
          description: Restriction not found
    delete:
      tags:
        - Account Restrictions
      summary: Delete Account Restriction
      description: Delete an existing account restriction.
      operationId: deleteAccountRestriction
      parameters:
        - name: accountRestrictionId
          in: path
          description: Unique identifier of the account restriction to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted the restriction
        '404':
          description: Restriction not found
  /api/v1/account-notifications/{accountNotificationId}:
    get:
      tags:
        - Account Notifications
      summary: Get Account Notification by ID
      description: Retrieve an existing account notification by its unique identifier.
      operationId: getAccountNotification
      parameters:
        - name: accountNotificationId
          in: path
          description: Unique identifier of the account notification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotificationDTO'
        '404':
          description: Notification not found
    put:
      tags:
        - Account Notifications
      summary: Update Account Notification
      description: Update an existing account notification with the specified details.
      operationId: updateAccountNotification
      parameters:
        - name: accountNotificationId
          in: path
          description: Unique identifier of the account notification to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountNotificationDTO'
        required: true
      responses:
        '200':
          description: Successfully updated the notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotificationDTO'
        '400':
          description: Invalid input
        '404':
          description: Notification not found
    delete:
      tags:
        - Account Notifications
      summary: Delete Account Notification
      description: Delete an existing account notification.
      operationId: deleteAccountNotification
      parameters:
        - name: accountNotificationId
          in: path
          description: Unique identifier of the account notification to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted the notification
        '404':
          description: Notification not found
  /api/v1/asset-prices:
    get:
      tags:
        - Asset Prices
      summary: List All Asset Prices
      description: Retrieve a paginated list of all asset prices.
      operationId: getAllAssetPrices
      parameters:
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the asset prices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No asset prices found
    post:
      tags:
        - Asset Prices
      summary: Create Asset Price
      description: Create a new asset price record.
      operationId: createAssetPrice
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetPriceDTO'
        required: true
      responses:
        '201':
          description: Asset price created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetPriceDTO'
        '400':
          description: Invalid asset price data provided
  /api/v1/accounts/{accountId}/status-history:
    get:
      tags:
        - Account Status History
      summary: List Account Status History
      description: Retrieve a paginated list of status history records associated with the specified account.
      operationId: getAllStatusHistory
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved status history records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No status history records found for the specified account
    post:
      tags:
        - Account Status History
      summary: Create Account Status History
      description: Create a new status history record for the specified account.
      operationId: createStatusHistory
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStatusHistoryDTO'
        required: true
      responses:
        '201':
          description: Status history record created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusHistoryDTO'
        '400':
          description: Invalid status history data provided
  /api/v1/accounts/{accountId}/spaces/{accountSpaceId}/providers:
    get:
      tags:
        - Account Space Providers
      summary: List Account Space Providers
      description: Retrieve a paginated list of provider records associated with the specified account space.
      operationId: getAllProvidersForSpace
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the provider records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No providers found for the specified account space
    post:
      tags:
        - Account Space Providers
      summary: Create Account Space Provider
      description: Create a new provider record and associate it with the specified account space.
      operationId: createProviderForSpace
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountProviderDTO'
        required: true
      responses:
        '201':
          description: Provider created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountProviderDTO'
        '400':
          description: Invalid provider data provided
  /api/v1/accounts/{accountId}/providers:
    get:
      tags:
        - Account Providers
      summary: List Account Providers
      description: Retrieve a paginated list of provider records associated with the specified account.
      operationId: getAllProviders
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the provider records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No providers found for the specified account
    post:
      tags:
        - Account Providers
      summary: Create Account Provider
      description: Create a new provider record and associate it with the specified account.
      operationId: createProvider
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountProviderDTO'
        required: true
      responses:
        '201':
          description: Provider created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountProviderDTO'
        '400':
          description: Invalid provider data provided
  /api/v1/accounts/{accountId}/parameters:
    get:
      tags:
        - Account Parameters
      summary: List Account Parameters
      description: Retrieve a paginated list of all parameter records associated with the specified account.
      operationId: getAllParameters
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved account parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No parameter records found for the specified account
    post:
      tags:
        - Account Parameters
      summary: Create Account Parameter
      description: Create a new parameter record and associate it with the specified account.
      operationId: createParameter
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountParameterDTO'
        required: true
      responses:
        '201':
          description: Parameter created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountParameterDTO'
        '400':
          description: Invalid parameter data provided
  /api/v1/accounts/{accountId}/balances:
    get:
      tags:
        - Account Balances
      summary: List Account Balances
      description: Retrieve a paginated list of all balances linked to a specific account.
      operationId: getAllBalances
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No balances found for the specified account
    post:
      tags:
        - Account Balances
      summary: Create Account Balance
      description: Create a new balance record for a specific account.
      operationId: createBalance
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBalanceDTO'
        required: true
      responses:
        '201':
          description: Account balance created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceDTO'
        '400':
          description: Invalid balance data provided
  /api/v1/accounts/filter:
    post:
      tags:
        - Accounts
      summary: Filter Accounts
      description: Retrieve a paginated list of all bank accounts based on filter criteria.
      operationId: filterAccounts
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestAccountDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseAccountDTO'
  /api/v1/accounts:
    post:
      tags:
        - Accounts
      summary: Create Account
      description: Create a new bank account with the specified details.
      operationId: createAccount
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
  /api/v1/account-spaces/{accountSpaceId}/unfreeze:
    post:
      tags:
        - Account Spaces
      summary: Unfreeze Account Space
      description: Unfreezes a previously frozen account space, allowing normal operations again.
      operationId: unfreezeAccountSpace
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space to unfreeze
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-spaces/{accountSpaceId}/transactions:
    get:
      tags:
        - Account Space Transactions
      summary: Get Transactions
      description: |-
        Retrieves a paginated list of all transactions for an account space.

        This endpoint returns the complete transaction history for a specific account space, including deposits, withdrawals, and other financial movements. Results are paginated to handle large transaction volumes efficiently.

        The response includes:
        * Transaction amounts and types
        * Transaction timestamps
        * Balance after each transaction
        * Transaction descriptions and reference IDs
        * Pagination metadata (total elements, total pages)
      operationId: getTransactions
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid input
        '404':
          description: No transactions found
    post:
      tags:
        - Account Space Transactions
      summary: Record Transaction
      description: |-
        Records a new financial transaction for an account space.

        This endpoint allows recording deposits (positive amounts) or withdrawals (negative amounts) for a specific account space. Each transaction affects the space's balance and is recorded with a timestamp, description, and optional reference ID for cross-system tracking.

        **Business Rules:**
        * Positive amounts represent deposits into the space
        * Negative amounts represent withdrawals from the space
        * The space must exist and be active
        * For withdrawals, the space must have sufficient balance
      operationId: recordTransaction
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: amount
          in: query
          description: Transaction amount (positive for deposits, negative for withdrawals)
          required: true
          schema:
            type: number
        - name: description
          in: query
          description: Transaction description
          required: false
          schema:
            type: string
        - name: referenceId
          in: query
          description: Reference ID for cross-system tracking
          required: false
          schema:
            type: string
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '201':
          description: Successfully recorded the transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceTransactionDTO'
        '400':
          description: Invalid input
        '404':
          description: Account space not found
  /api/v1/account-spaces/{accountSpaceId}/freeze:
    post:
      tags:
        - Account Spaces
      summary: Freeze Account Space
      description: Freezes an account space, preventing withdrawals and transfers from it.
      operationId: freezeAccountSpace
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space to freeze
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-spaces/{accountSpaceId}/configure-transfers:
    post:
      tags:
        - Account Spaces
      summary: Configure Automatic Transfers
      description: Configure automatic transfers for a specific space.
      operationId: configureAutomaticTransfers
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: enabled
          in: query
          description: Whether automatic transfers are enabled
          required: true
          schema:
            type: boolean
        - name: frequency
          in: query
          description: Transfer frequency
          required: false
          schema:
            type: string
            enum:
              - DAILY
              - WEEKLY
              - MONTHLY
              - QUARTERLY
              - ANNUALLY
        - name: amount
          in: query
          description: Transfer amount
          required: false
          schema:
            type: number
        - name: sourceSpaceId
          in: query
          description: Source space ID (null for main account)
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-spaces/transfer:
    post:
      tags:
        - Account Spaces
      summary: Transfer Between Spaces
      description: Transfer funds between two account spaces within the same account.
      operationId: transferBetweenSpaces
      parameters:
        - name: fromSpaceId
          in: query
          description: Source account space ID
          required: true
          schema:
            type: string
            format: uuid
        - name: toSpaceId
          in: query
          description: Destination account space ID
          required: true
          schema:
            type: string
            format: uuid
        - name: amount
          in: query
          description: Amount to transfer
          required: true
          schema:
            type: number
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /api/v1/account-spaces/execute-transfers/{accountId}:
    post:
      tags:
        - Account Spaces
      summary: Execute Automatic Transfers
      description: Execute all pending automatic transfers for a specific account.
      operationId: executeAutomaticTransfers
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /api/v1/account-spaces:
    get:
      tags:
        - Account Spaces
      summary: Filter Account Spaces
      description: Retrieve a paginated list of all account spaces based on filter criteria.
      operationId: filterAccountSpaces
      parameters:
        - name: filterRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/FilterRequestAccountSpaceDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseAccountSpaceDTO'
    post:
      tags:
        - Account Spaces
      summary: Create Account Space
      description: Create a new account space with the specified details.
      operationId: createAccountSpace
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSpaceDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-restrictions/{accountRestrictionId}/remove:
    post:
      tags:
        - Account Restrictions
      summary: Remove Restriction
      description: Mark an account restriction as inactive.
      operationId: removeRestriction
      parameters:
        - name: accountRestrictionId
          in: path
          description: Unique identifier of the account restriction
          required: true
          schema:
            type: string
            format: uuid
        - name: removedBy
          in: query
          description: User or system that removed the restriction
          required: true
          schema:
            type: string
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully removed the restriction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRestrictionDTO'
        '400':
          description: Invalid input or restriction already removed
        '404':
          description: Restriction not found
  /api/v1/account-restrictions:
    get:
      tags:
        - Account Restrictions
      summary: Filter Account Restrictions
      description: Retrieve a paginated list of all account restrictions based on filter criteria.
      operationId: filterAccountRestrictions
      parameters:
        - name: filterRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/FilterRequestAccountRestrictionDTO'
      responses:
        '200':
          description: Successfully retrieved the restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No restrictions found
    post:
      tags:
        - Account Restrictions
      summary: Create Account Restriction
      description: Create a new account restriction with the specified details.
      operationId: createAccountRestriction
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRestrictionDTO'
        required: true
      responses:
        '201':
          description: Successfully created the restriction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRestrictionDTO'
        '400':
          description: Invalid input
  /api/v1/account-notifications/{accountNotificationId}/mark-read:
    post:
      tags:
        - Account Notifications
      summary: Mark Notification as Read
      description: Mark an account notification as read.
      operationId: markNotificationAsRead
      parameters:
        - name: accountNotificationId
          in: path
          description: Unique identifier of the account notification
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully marked the notification as read
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotificationDTO'
        '400':
          description: Notification already read
        '404':
          description: Notification not found
  /api/v1/account-notifications/account/{accountId}/mark-all-read:
    post:
      tags:
        - Account Notifications
      summary: Mark All Notifications as Read
      description: Mark all notifications for a specific account as read.
      operationId: markAllNotificationsAsRead
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully marked all notifications as read
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Invalid account ID
  /api/v1/account-notifications:
    get:
      tags:
        - Account Notifications
      summary: Filter Account Notifications
      description: Retrieve a paginated list of all account notifications based on filter criteria.
      operationId: filterAccountNotifications
      parameters:
        - name: filterRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/FilterRequestAccountNotificationDTO'
      responses:
        '200':
          description: Successfully retrieved the notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No notifications found
    post:
      tags:
        - Account Notifications
      summary: Create Account Notification
      description: Create a new account notification with the specified details.
      operationId: createAccountNotification
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountNotificationDTO'
        required: true
      responses:
        '201':
          description: Successfully created the notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotificationDTO'
        '400':
          description: Invalid input
  /api/v1/asset-prices/asset/{assetSymbol}/history:
    get:
      tags:
        - Asset Prices
      summary: Get Historical Asset Prices
      description: Retrieve a paginated list of historical asset prices for a specific asset symbol within a date range.
      operationId: getHistoricalAssetPrices
      parameters:
        - name: assetSymbol
          in: path
          description: Symbol of the asset (e.g., 'BTC', 'ETH')
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: Start date of the range (ISO format)
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End date of the range (ISO format)
          required: true
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the historical asset prices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No historical asset prices found for the specified criteria
  /api/v1/asset-prices/asset/{assetSymbol}/currency/{quoteCurrency}/latest:
    get:
      tags:
        - Asset Prices
      summary: Get Latest Asset Price
      description: Retrieve the latest price for a specific asset symbol and quote currency.
      operationId: getLatestAssetPrice
      parameters:
        - name: assetSymbol
          in: path
          description: Symbol of the asset (e.g., 'BTC', 'ETH')
          required: true
          schema:
            type: string
        - name: quoteCurrency
          in: path
          description: Currency in which the asset is priced (e.g., 'USD', 'EUR')
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the latest asset price
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetPriceDTO'
        '404':
          description: No asset price found for the specified symbol and currency
  /api/v1/asset-prices/asset/{assetSymbol}/currency/{quoteCurrency}/history:
    get:
      tags:
        - Asset Prices
      summary: Get Historical Asset Prices by Currency
      description: Retrieve a paginated list of historical asset prices for a specific asset symbol and quote currency within a date range.
      operationId: getHistoricalAssetPricesByCurrency
      parameters:
        - name: assetSymbol
          in: path
          description: Symbol of the asset (e.g., 'BTC', 'ETH')
          required: true
          schema:
            type: string
        - name: quoteCurrency
          in: path
          description: Currency in which the asset is priced (e.g., 'USD', 'EUR')
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: Start date of the range (ISO format)
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End date of the range (ISO format)
          required: true
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the historical asset prices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No historical asset prices found for the specified criteria
  /api/v1/asset-prices/asset/{assetSymbol}/currency/{quoteCurrency}:
    get:
      tags:
        - Asset Prices
      summary: Get Asset Prices by Symbol and Currency
      description: Retrieve a paginated list of asset prices for a specific asset symbol and quote currency.
      operationId: getAssetPricesBySymbolAndCurrency
      parameters:
        - name: assetSymbol
          in: path
          description: Symbol of the asset (e.g., 'BTC', 'ETH')
          required: true
          schema:
            type: string
        - name: quoteCurrency
          in: path
          description: Currency in which the asset is priced (e.g., 'USD', 'EUR')
          required: true
          schema:
            type: string
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the asset prices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No asset prices found for the specified symbol and currency
    delete:
      tags:
        - Asset Prices
      summary: Delete Asset Prices by Symbol and Currency
      description: Delete all asset prices for a specific asset symbol and quote currency.
      operationId: deleteAssetPricesBySymbolAndCurrency
      parameters:
        - name: assetSymbol
          in: path
          description: Symbol of the asset (e.g., 'BTC', 'ETH')
          required: true
          schema:
            type: string
        - name: quoteCurrency
          in: path
          description: Currency in which the asset is priced (e.g., 'USD', 'EUR')
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Asset prices deleted successfully
        '404':
          description: No asset prices found for the specified symbol and currency
  /api/v1/asset-prices/asset/{assetSymbol}:
    get:
      tags:
        - Asset Prices
      summary: Get Asset Prices by Symbol
      description: Retrieve a paginated list of asset prices for a specific asset symbol.
      operationId: getAssetPricesBySymbol
      parameters:
        - name: assetSymbol
          in: path
          description: Symbol of the asset (e.g., 'BTC', 'ETH')
          required: true
          schema:
            type: string
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the asset prices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No asset prices found for the specified symbol
    delete:
      tags:
        - Asset Prices
      summary: Delete Asset Prices by Symbol
      description: Delete all asset prices for a specific asset symbol.
      operationId: deleteAssetPricesBySymbol
      parameters:
        - name: assetSymbol
          in: path
          description: Symbol of the asset (e.g., 'BTC', 'ETH')
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Asset prices deleted successfully
        '404':
          description: No asset prices found for the specified symbol
  /api/v1/account-spaces/{accountSpaceId}/transactions/history/balance:
    get:
      tags:
        - Account Space Transactions
      summary: Get Balance at Date Time
      description: |-
        Retrieves the historical balance of an account space at a specific point in time.

        This endpoint provides the ability to view what the balance of a space was at any historical moment. It uses the transaction history to calculate the balance as it existed at the exact specified date and time.

        **Use cases:**
        * Historical financial reporting and reconciliation
        * Auditing and compliance verification
        * Analyzing balance trends over time

        If the specified time predates the space's creation, the endpoint returns zero.
      operationId: getBalanceAtDateTime
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: dateTime
          in: query
          description: Date and time to get the balance at
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved the balance
          content:
            application/json:
              schema:
                type: number
        '400':
          description: Invalid input
  /api/v1/account-spaces/{accountSpaceId}/transactions/filter/date:
    get:
      tags:
        - Account Space Transactions
      summary: Get Transactions by Date Range
      description: |-
        Retrieves a paginated list of transactions for an account space within a specific date range.

        This endpoint allows filtering the transaction history by start and end dates, making it easier to analyze financial activity during specific time periods. Results are paginated to handle large transaction volumes efficiently.

        **Use cases:**
        * Generating monthly or quarterly transaction reports
        * Analyzing spending patterns over specific periods
        * Reconciling transactions for a particular timeframe

        The date range is inclusive of both the start and end dates specified.
      operationId: getTransactionsByDateRange
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          description: Start date of the range (inclusive)
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End date of the range (inclusive)
          required: true
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          description: The zero-based page number to retrieve.
          required: false
          schema:
            type: string
            description: The zero-based page number to retrieve.
            example: 0
            default: '0'
          example: 0
        - name: pageSize
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: string
            description: The number of items per page.
            example: 10
            default: '10'
          example: 10
        - name: sortBy
          in: query
          description: The field to sort the results by.
          required: false
          schema:
            type: string
            description: The field to sort the results by.
            example: name
          example: name
        - name: sortDirection
          in: query
          description: The direction of sorting, either ASC or DESC.
          required: false
          schema:
            type: string
            description: The direction of sorting, either ASC or DESC.
            example: DESC
            default: DESC
          example: DESC
      responses:
        '200':
          description: Successfully retrieved the transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid input
        '404':
          description: No transactions found
  /api/v1/account-spaces/{accountSpaceId}/transactions/analytics/withdrawals:
    get:
      tags:
        - Account Space Transactions
      summary: Calculate Total Withdrawals
      description: |-
        Calculates the sum of all withdrawals made from an account space within a specified date range.

        This endpoint aggregates all negative financial transactions (withdrawals) within the given time period and returns the total amount as a positive number. This is useful for expense tracking, budget analysis, and monitoring space utilization.

        **Notes:**
        * Only negative transactions (withdrawals) are included in the calculation
        * The result is returned as a positive number for easier consumption
        * The calculation includes transactions on the start and end dates (inclusive range)
        * Returns zero if no withdrawals were made during the specified period
      operationId: calculateTotalWithdrawals
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          description: Start date of the range (inclusive)
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End date of the range (inclusive)
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully calculated the total withdrawals
          content:
            application/json:
              schema:
                type: number
        '400':
          description: Invalid input
  /api/v1/account-spaces/{accountSpaceId}/transactions/analytics/deposits:
    get:
      tags:
        - Account Space Transactions
      summary: Calculate Total Deposits
      description: |-
        Calculates the sum of all deposits made to an account space within a specified date range.

        This endpoint aggregates all positive financial transactions (deposits) within the given time period and returns the total amount. This is useful for financial reporting, analyzing saving patterns, and monitoring space funding.

        **Notes:**
        * Only positive transactions (deposits) are included in the calculation
        * The calculation includes transactions on the start and end dates (inclusive range)
        * Returns zero if no deposits were made during the specified period
      operationId: calculateTotalDeposits
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          description: Start date of the range (inclusive)
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End date of the range (inclusive)
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully calculated the total deposits
          content:
            application/json:
              schema:
                type: number
        '400':
          description: Invalid input
  /api/v1/account-spaces/{accountSpaceId}/goal-progress:
    get:
      tags:
        - Account Spaces
      summary: Calculate Goal Progress
      description: Calculate progress towards a goal for a specific space.
      operationId: calculateGoalProgress
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-spaces/{accountSpaceId}/analytics:
    get:
      tags:
        - Account Spaces
      summary: Get Space Analytics
      description: Generates detailed analytics for a specific account space over a period.
      operationId: getSpaceAnalytics
      parameters:
        - name: accountSpaceId
          in: path
          description: Unique identifier of the account space
          required: true
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          description: Start date for the analysis period (optional)
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End date for the analysis period (optional)
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceAnalyticsDTO'
  /api/v1/account-spaces/with-upcoming-targets/{accountId}:
    get:
      tags:
        - Account Spaces
      summary: Get Spaces with Upcoming Target Dates
      description: Retrieve all spaces with upcoming target dates for a specific account.
      operationId: getSpacesWithUpcomingTargetDates
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: daysThreshold
          in: query
          description: Number of days in the future to consider 'upcoming'
          required: true
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-spaces/with-goals/{accountId}:
    get:
      tags:
        - Account Spaces
      summary: Get Spaces with Goals
      description: Retrieve all spaces with goals for a specific account.
      operationId: getSpacesWithGoals
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-spaces/simulate-balances/{accountId}:
    get:
      tags:
        - Account Spaces
      summary: Simulate Future Balances
      description: Simulate future balances based on automatic transfers.
      operationId: simulateFutureBalances
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: months
          in: query
          description: Number of months to simulate
          required: true
          schema:
            type: integer
            format: int32
            default: 12
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
  /api/v1/account-spaces/growth-rates/{accountId}:
    get:
      tags:
        - Account Spaces
      summary: Calculate Growth Rates
      description: Calculate the growth rate for each space over a period.
      operationId: calculateGrowthRates
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          description: Start date for the calculation
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End date for the calculation
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
  /api/v1/account-spaces/by-type/{accountId}:
    get:
      tags:
        - Account Spaces
      summary: Get Spaces by Type
      description: Retrieve all spaces of a specific type for an account.
      operationId: getSpacesByType
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: spaceType
          in: query
          description: Space type
          required: true
          schema:
            type: string
            enum:
              - MAIN
              - SAVINGS
              - VACATION
              - EMERGENCY
              - GOALS
              - CUSTOM
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-spaces/by-account/{accountId}/paginated:
    get:
      tags:
        - Account Spaces
      summary: Get Paginated Account Spaces by Account ID
      description: Retrieve a paginated list of account spaces for a specific account.
      operationId: getAccountSpacesByAccountIdPaginated
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: Page number (0-based)
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          description: Page size
          required: true
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseAccountSpaceDTO'
  /api/v1/account-spaces/by-account/{accountId}:
    get:
      tags:
        - Account Spaces
      summary: Get Account Spaces by Account ID
      description: Retrieve all account spaces for a specific account.
      operationId: getAccountSpacesByAccountId
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountSpaceDTO'
  /api/v1/account-spaces/balance-distribution/{accountId}:
    get:
      tags:
        - Account Spaces
      summary: Calculate Balance Distribution
      description: Calculate the distribution of funds across spaces for a specific account.
      operationId: calculateBalanceDistribution
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
  /api/v1/account-restrictions/account/{accountId}/active:
    get:
      tags:
        - Account Restrictions
      summary: Get Active Account Restrictions by Account ID
      description: Retrieve all active restrictions for a specific account.
      operationId: getActiveAccountRestrictionsByAccountId
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the active restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRestrictionDTO'
        '400':
          description: Invalid account ID
  /api/v1/account-restrictions/account/{accountId}:
    get:
      tags:
        - Account Restrictions
      summary: Get Account Restrictions by Account ID
      description: Retrieve all restrictions for a specific account.
      operationId: getAccountRestrictionsByAccountId
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRestrictionDTO'
        '400':
          description: Invalid account ID
  /api/v1/account-notifications/account/{accountId}/unread:
    get:
      tags:
        - Account Notifications
      summary: Get Unread Account Notifications
      description: Retrieve all unread notifications for a specific account.
      operationId: getUnreadAccountNotifications
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the unread notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotificationDTO'
        '400':
          description: Invalid account ID
  /api/v1/account-notifications/account/{accountId}/type/{notificationType}:
    get:
      tags:
        - Account Notifications
      summary: Get Account Notifications by Type
      description: Retrieve all notifications of a specific type for a specific account.
      operationId: getAccountNotificationsByType
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
        - name: notificationType
          in: path
          description: Type of notification
          required: true
          schema:
            type: string
            enum:
              - LOW_BALANCE
              - LARGE_DEPOSIT
              - LARGE_WITHDRAWAL
              - OVERDRAFT
              - INSUFFICIENT_FUNDS
              - APPROACHING_MINIMUM_BALANCE
              - STATEMENT_AVAILABLE
              - INTEREST_PAYMENT
              - FEE_CHARGED
              - STATUS_CHANGE
              - APPROACHING_MATURITY
              - MATURITY_REACHED
              - SUSPICIOUS_ACTIVITY
              - RESTRICTION_APPLIED
              - RESTRICTION_REMOVED
              - APPROACHING_DORMANCY
              - DORMANCY_APPLIED
              - GOAL_PROGRESS
              - GOAL_ACHIEVED
              - AUTOMATIC_TRANSFER
              - AUTOMATIC_TRANSFER_FAILED
              - BALANCE_THRESHOLD
              - PARAMETER_CHANGE
              - ACCOUNT_CLOSURE
      responses:
        '200':
          description: Successfully retrieved the notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotificationDTO'
        '400':
          description: Invalid input
  /api/v1/account-notifications/account/{accountId}/active:
    get:
      tags:
        - Account Notifications
      summary: Get Active Notifications
      description: Retrieve all active (non-expired) notifications for a specific account.
      operationId: getActiveNotifications
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the active notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotificationDTO'
        '400':
          description: Invalid account ID
  /api/v1/account-notifications/account/{accountId}:
    get:
      tags:
        - Account Notifications
      summary: Get Account Notifications by Account ID
      description: Retrieve all notifications for a specific account.
      operationId: getAccountNotificationsByAccountId
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotificationDTO'
        '400':
          description: Invalid account ID
  /api/v1/asset-prices/older-than:
    delete:
      tags:
        - Asset Prices
      summary: Delete Asset Prices Older Than
      description: Delete all asset prices older than a specific date.
      operationId: deleteAssetPricesOlderThan
      parameters:
        - name: date
          in: query
          description: Cutoff date (ISO format)
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '204':
          description: Asset prices deleted successfully
        '404':
          description: No asset prices found older than the specified date
components:
  schemas:
    AssetPriceDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        assetPriceId:
          type: string
          format: uuid
          readOnly: true
        assetSymbol:
          type: string
        quoteCurrency:
          type: string
        price:
          type: number
        asOfDatetime:
          type: string
          format: date-time
        priceSource:
          type: string
    AccountStatusHistoryDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        accountStatusHistoryId:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
        statusCode:
          type: string
          enum:
            - OPEN
            - SUSPENDED
            - CLOSED
            - DORMANT
        statusStartDatetime:
          type: string
          format: date-time
        statusEndDatetime:
          type: string
          format: date-time
        reason:
          type: string
    AccountProviderDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        accountProviderId:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
        providerName:
          type: string
        externalReference:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - PENDING
            - SUSPENDED
        accountSpaceId:
          type: string
          format: uuid
    AccountParameterDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        accountParameterId:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
        paramType:
          type: string
          enum:
            - MONTHLY_FEE
            - OVERDRAFT_LIMIT
            - INTEREST_RATE
        paramValue:
          type: number
        paramUnit:
          type: string
        effectiveDate:
          type: string
          format: date-time
        expiryDate:
          type: string
          format: date-time
        description:
          type: string
    AccountBalanceDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        accountBalanceId:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
        accountSpaceId:
          type: string
          format: uuid
        balanceType:
          type: string
          enum:
            - CURRENT
            - AVAILABLE
            - BLOCKED
            - STAKED
            - LOCKED
            - PENDING_CONFIRMATION
        balanceAmount:
          type: number
        asOfDatetime:
          type: string
          format: date-time
        assetSymbol:
          type: string
        assetDecimals:
          type: string
        transactionHash:
          type: string
        confirmations:
          type: integer
          format: int32
    AccountDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        accountId:
          type: string
          format: uuid
          readOnly: true
        contractId:
          type: string
          format: uuid
        accountNumber:
          type: string
        accountType:
          type: string
          enum:
            - CHECKING
            - SAVINGS
            - TERM_DEPOSIT
            - LOAN
            - CREDIT_CARD
            - INVESTMENT
            - MORTGAGE
            - BUSINESS_CHECKING
            - BUSINESS_SAVINGS
            - FOREIGN_CURRENCY
            - PREMIUM
            - YOUTH
            - SENIOR
            - PENSION
            - GOVERNMENT_BENEFITS
            - CRYPTO_WALLET
            - TOKENIZED_ASSET
            - DIGITAL_ASSET
            - STABLECOIN
            - NFT_COLLECTION
        currency:
          type: string
        openDate:
          type: string
          format: date
        closeDate:
          type: string
          format: date
        accountStatus:
          type: string
          enum:
            - OPEN
            - CLOSED
            - SUSPENDED
            - DORMANT
        branchId:
          type: string
          format: uuid
        description:
          type: string
        accountSubType:
          type: string
          enum:
            - STANDARD_CHECKING
            - INTEREST_CHECKING
            - REWARDS_CHECKING
            - FREE_CHECKING
            - PREMIUM_CHECKING
            - STANDARD_SAVINGS
            - HIGH_YIELD_SAVINGS
            - MONEY_MARKET
            - CERTIFICATE_OF_DEPOSIT
            - IRA
            - FIXED_TERM_DEPOSIT
            - VARIABLE_TERM_DEPOSIT
            - PERSONAL_LOAN
            - AUTO_LOAN
            - HELOC
            - STANDARD_CREDIT_CARD
            - REWARDS_CREDIT_CARD
            - CASHBACK_CREDIT_CARD
            - TRAVEL_CREDIT_CARD
            - BUSINESS_CREDIT_CARD
            - FIXED_RATE_MORTGAGE
            - ADJUSTABLE_RATE_MORTGAGE
            - INTEREST_ONLY_MORTGAGE
            - STANDARD_BUSINESS_CHECKING
            - PREMIUM_BUSINESS_CHECKING
            - STANDARD_BUSINESS_SAVINGS
            - PREMIUM_BUSINESS_SAVINGS
            - MULTI_CURRENCY
            - SINGLE_CURRENCY_FOREIGN
            - RELATIONSHIP_PREMIUM
            - WEALTH_MANAGEMENT
            - YOUTH_SAVINGS
            - STUDENT_CHECKING
            - SENIOR_CHECKING
            - SENIOR_SAVINGS
            - PENSION_DISTRIBUTION
            - SOCIAL_SECURITY_BENEFITS
            - GOVERNMENT_ASSISTANCE
        taxReportingStatus:
          type: string
          enum:
            - REPORTABLE
            - EXEMPT
            - BACKUP_WITHHOLDING
            - FATCA_REPORTABLE
            - CRS_REPORTABLE
            - FATCA_CRS_REPORTABLE
            - PENDING_DOCUMENTATION
            - INCOMPLETE_INFORMATION
            - NON_REPORTABLE
        regulatoryStatus:
          type: string
          enum:
            - COMPLIANT
            - PENDING_DOCUMENTATION
            - ENHANCED_DUE_DILIGENCE
            - UNDER_REVIEW
            - SPECIAL_MONITORING
            - SANCTIONS_SCREENING
            - PEP_MONITORING
            - HIGH_RISK_MONITORING
            - REGULATORY_EXEMPTION
            - NON_COMPLIANT
            - REGULATORY_RESTRICTED
        maturityDate:
          type: string
          format: date
        interestAccrualMethod:
          type: string
          enum:
            - SIMPLE
            - DAILY_COMPOUND
            - MONTHLY_COMPOUND
            - QUARTERLY_COMPOUND
            - SEMI_ANNUAL_COMPOUND
            - ANNUAL_COMPOUND
            - CONTINUOUS_COMPOUND
            - DAILY_AVERAGE_BALANCE
            - MONTHLY_AVERAGE_BALANCE
            - MINIMUM_BALANCE
            - TIERED_RATE
            - STEPPED_RATE
            - DAY_COUNT_30_360
            - DAY_COUNT_ACTUAL_360
            - DAY_COUNT_ACTUAL_365
            - DAY_COUNT_ACTUAL_ACTUAL
        interestPaymentFrequency:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - BI_WEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMI_ANNUALLY
            - ANNUALLY
            - AT_MATURITY
            - AT_CLOSURE
            - SPECIFIC_DAY_OF_MONTH
            - SPECIFIC_DATE
            - NONE
        minimumBalance:
          type: number
        overdraftLimit:
          type: number
        walletAddress:
          type: string
        blockchainNetwork:
          type: string
        tokenContractAddress:
          type: string
        tokenStandard:
          type: string
        isCustodial:
          type: boolean
      description: Data for the new account
    AccountSpaceDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        accountSpaceId:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
        spaceName:
          type: string
        spaceType:
          type: string
          enum:
            - MAIN
            - SAVINGS
            - VACATION
            - EMERGENCY
            - GOALS
            - CUSTOM
        balance:
          type: number
        targetAmount:
          type: number
        targetDate:
          type: string
          format: date-time
        iconId:
          type: string
        colorCode:
          type: string
        description:
          type: string
        isVisible:
          type: boolean
        goalProgressPercentage:
          type: number
          readOnly: true
        remainingToTarget:
          type: number
          readOnly: true
        estimatedCompletionDate:
          type: string
          format: date-time
          readOnly: true
        isGoalCompleted:
          type: boolean
          readOnly: true
        enableAutomaticTransfers:
          type: boolean
        transferFrequency:
          type: string
          enum:
            - DAILY
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            - ANNUALLY
        transferAmount:
          type: number
        sourceSpaceId:
          type: string
          format: uuid
        averageGrowthRate:
          type: number
          readOnly: true
        contributionToAccountTotal:
          type: number
          readOnly: true
        isFrozen:
          type: boolean
        frozenDateTime:
          type: string
          format: date-time
          readOnly: true
        unfrozenDateTime:
          type: string
          format: date-time
          readOnly: true
        lastBalanceUpdateReason:
          type: string
          readOnly: true
        lastBalanceUpdateDateTime:
          type: string
          format: date-time
          readOnly: true
      description: Data for the new account space
    AccountRestrictionDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        accountRestrictionId:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
        restrictionType:
          type: string
          enum:
            - WITHDRAWAL_HOLD
            - DEPOSIT_HOLD
            - ACCOUNT_FREEZE
            - LEGAL_ORDER
            - COURT_ORDER
            - FRAUD_INVESTIGATION
            - DECEASED_HOLDER
            - DORMANCY
            - NEGATIVE_BALANCE
            - EXCESSIVE_OVERDRAFTS
            - SUSPICIOUS_ACTIVITY
            - AML_INVESTIGATION
            - INTERNATIONAL_TRANSFER_RESTRICTION
            - HIGH_VALUE_TRANSACTION_RESTRICTION
            - PENDING_DOCUMENTATION
            - EXPIRED_IDENTIFICATION
            - BANKRUPTCY
            - ESTATE_SETTLEMENT
            - REGULATORY_COMPLIANCE
            - SANCTIONS_SCREENING
            - TRANSACTION_TYPE_RESTRICTION
            - CHANNEL_RESTRICTION
            - GEOGRAPHIC_RESTRICTION
            - CLOSURE_IN_PROGRESS
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        restrictedAmount:
          type: number
        referenceNumber:
          type: string
        reason:
          type: string
        appliedBy:
          type: string
        removedBy:
          type: string
        notes:
          type: string
        isActive:
          type: boolean
    AccountNotificationDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        accountNotificationId:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
        notificationType:
          type: string
          enum:
            - LOW_BALANCE
            - LARGE_DEPOSIT
            - LARGE_WITHDRAWAL
            - OVERDRAFT
            - INSUFFICIENT_FUNDS
            - APPROACHING_MINIMUM_BALANCE
            - STATEMENT_AVAILABLE
            - INTEREST_PAYMENT
            - FEE_CHARGED
            - STATUS_CHANGE
            - APPROACHING_MATURITY
            - MATURITY_REACHED
            - SUSPICIOUS_ACTIVITY
            - RESTRICTION_APPLIED
            - RESTRICTION_REMOVED
            - APPROACHING_DORMANCY
            - DORMANCY_APPLIED
            - GOAL_PROGRESS
            - GOAL_ACHIEVED
            - AUTOMATIC_TRANSFER
            - AUTOMATIC_TRANSFER_FAILED
            - BALANCE_THRESHOLD
            - PARAMETER_CHANGE
            - ACCOUNT_CLOSURE
        title:
          type: string
        message:
          type: string
        creationDateTime:
          type: string
          format: date-time
        expiryDateTime:
          type: string
          format: date-time
        isRead:
          type: boolean
        readDateTime:
          type: string
          format: date-time
        priority:
          type: integer
          format: int32
        deliveryChannels:
          type: string
        eventReference:
          type: string
        relatedAmount:
          type: number
        actionUrl:
          type: string
        actionText:
          type: string
    FilterOptions:
      type: object
      properties:
        caseInsensitiveStrings:
          type: boolean
        includeInheritedFields:
          type: boolean
      description: Filter options for customizing filter behavior
    FilterRequestAccountDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/AccountDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    PaginationRequest:
      type: object
      properties:
        pageNumber:
          type: integer
          description: The zero-based page number to retrieve.
          format: int32
          example: 0
          default: 0
        pageSize:
          type: integer
          description: The number of items per page.
          format: int32
          example: 10
          default: 10
        sortBy:
          type: string
          description: The field to sort the results by.
          example: name
        sortDirection:
          type: string
          description: The direction of sorting, either ASC or DESC.
          example: DESC
          default: DESC
      description: Represents a pagination request for retrieving paginated results, including page number, size, sort field, and direction.
    RangeFilter:
      type: object
      properties:
        ranges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RangeObject'
          description: Map of field names to their range criteria
      description: Represents range filters for numeric fields
    RangeObject:
      type: object
      properties:
        from:
          type: object
          description: Start value of the range
        to:
          type: object
          description: End value of the range
      description: Represents a range with from and to values
    PaginationResponseAccountDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/AccountDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    SpaceTransactionDTO:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        spaceTransactionId:
          type: string
          format: uuid
          readOnly: true
        accountSpaceId:
          type: string
          format: uuid
        amount:
          type: number
        balanceAfterTransaction:
          type: number
        transactionDateTime:
          type: string
          format: date-time
        description:
          type: string
        referenceId:
          type: string
        transactionType:
          type: string
        spaceName:
          type: string
          readOnly: true
        accountId:
          type: string
          format: uuid
          readOnly: true
    PaginationResponse:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            type: object
            description: The list of items for the current page.
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    SpaceAnalyticsDTO:
      type: object
      properties:
        accountSpaceId:
          type: string
          format: uuid
        accountId:
          type: string
          format: uuid
        spaceName:
          type: string
        spaceType:
          type: string
          enum:
            - MAIN
            - SAVINGS
            - VACATION
            - EMERGENCY
            - GOALS
            - CUSTOM
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        openingBalance:
          type: number
        closingBalance:
          type: number
        lowestBalance:
          type: number
        highestBalance:
          type: number
        averageBalance:
          type: number
        netChange:
          type: number
        netChangePercentage:
          type: number
        annualizedGrowthRate:
          type: number
        totalTransactions:
          type: integer
          format: int32
        incomingTransactions:
          type: integer
          format: int32
        outgoingTransactions:
          type: integer
          format: int32
        totalInflow:
          type: number
        totalOutflow:
          type: number
        averageTransactionAmount:
          type: number
        balanceHistory:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesDataPoint'
        categoryDistribution:
          type: object
          additionalProperties:
            type: number
        goalProgress:
          type: number
        projectedCompletionPercentage:
          type: number
        projectedCompletionDate:
          type: string
          format: date-time
        percentageOfTotalAccountBalance:
          type: number
        rankByBalance:
          type: integer
          format: int32
        rankByGrowth:
          type: integer
          format: int32
    TimeSeriesDataPoint:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        value:
          type: number
    PaginationResponseAccountSpaceDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/AccountSpaceDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestAccountSpaceDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/AccountSpaceDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestAccountRestrictionDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/AccountRestrictionDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestAccountNotificationDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/AccountNotificationDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
