package com.catalis.core.banking.accounts.models.entities.core.v1;

import com.catalis.core.banking.accounts.interfaces.enums.core.v1.AccountStatusEnum;
import com.catalis.core.banking.accounts.interfaces.enums.core.v1.AccountSubTypeEnum;
import com.catalis.core.banking.accounts.interfaces.enums.core.v1.AccountTypeEnum;
import com.catalis.core.banking.accounts.interfaces.enums.interest.v1.InterestAccrualMethodEnum;
import com.catalis.core.banking.accounts.interfaces.enums.interest.v1.InterestPaymentFrequencyEnum;
import com.catalis.core.banking.accounts.interfaces.enums.regulatory.v1.RegulatoryStatusEnum;
import com.catalis.core.banking.accounts.interfaces.enums.regulatory.v1.TaxReportingStatusEnum;
import com.catalis.core.banking.accounts.models.entities.BaseEntity;
import com.catalis.core.banking.accounts.models.entities.status.v1.AccountStatusHistory;
import lombok.*;
import org.springframework.data.annotation.Id;
import org.springframework.data.relational.core.mapping.Table;

import java.math.BigDecimal;
import java.time.LocalDate;

/**
 * Represents a banking account in the system.
 * This entity is the core of the account domain and holds the main account information.
 *
 * Business Rules:
 * - Account number must be unique
 * - Account must be linked to a contract
 * - Account must have a currency
 * - Account must have a branch
 * - Account status transitions must be tracked in AccountStatusHistory
 *
 * @see AccountStatusHistory
 * @see AccountBalance
 */
@Table("account")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
public class Account extends BaseEntity {

    /**
     * Unique identifier for the account
     * Auto-generated by the database
     * Example: 100001
     */
    @Id
    private Long accountId;

    /**
     * Reference to the customer contract in the contract system
     * Example: 500123 (corresponds to contract ID in Contract Management System)
     */
    private Long contractId;

    /**
     * Official account number, typically in IBAN format for international accounts
     * Examples:
     * - IBAN: "DE89 3704 0044 0532 0130 00"
     * - Internal: "2024-00001-001"
     */
    private String accountNumber;

    /**
     * Type of account defining its basic characteristics and rules
     * Examples:
     * - CHECKING - Regular current account
     * - SAVINGS - Interest-bearing savings account
     * - BUSINESS_CHECKING - Corporate account
     * - LOAN - Credit account
     */
    private AccountTypeEnum accountType;

    /**
     * ISO 4217 currency code for the account
     * Examples:
     * - "EUR" - Euro
     * - "USD" - US Dollar
     * - "GBP" - British Pound
     * Must match supported currencies in the system
     */
    private String currency;

    /**
     * Date when the account was officially opened
     * Example: 2024-01-15 (January 15, 2024)
     * Used for:
     * - Age calculations
     * - Regulatory reporting
     * - Interest calculations
     */
    private LocalDate openDate;

    /**
     * Optional date when the account was/will be closed
     * Example: 2025-01-15 (January 15, 2025)
     * Null if account is still active
     */
    private LocalDate closeDate;

    /**
     * Current operational status of the account
     * Controls permitted operations and access
     * Status changes must be tracked in AccountStatusHistory
     */
    private AccountStatusEnum accountStatus;

    /**
     * Reference to the branch where the account was opened
     * Example: 1001 (Main Branch)
     * Used for:
     * - Organizational structure
     * - Reporting
     * - Service assignment
     */
    private Long branchId;

    /**
     * Optional free-text description for special notes
     * Examples:
     * - "VIP Customer Account"
     * - "Employee Account"
     * - "Special Rate Account - Management Approved"
     */
    private String description;

    /**
     * More specific classification of the account type
     * Examples:
     * - STANDARD_CHECKING: Basic checking account
     * - HIGH_YIELD_SAVINGS: High-interest savings account
     * - FIXED_RATE_MORTGAGE: Fixed-rate mortgage loan
     */
    private AccountSubTypeEnum accountSubType;

    /**
     * Tax reporting status of the account
     * Examples:
     * - REPORTABLE: Account is reportable for tax purposes
     * - EXEMPT: Account is exempt from tax reporting
     * - FATCA_REPORTABLE: Account is subject to FATCA reporting
     */
    private TaxReportingStatusEnum taxReportingStatus;

    /**
     * Regulatory classification of the account
     * Examples:
     * - COMPLIANT: Account meets all regulatory requirements
     * - ENHANCED_DUE_DILIGENCE: Account requires enhanced monitoring
     * - REGULATORY_RESTRICTED: Account has regulatory restrictions
     */
    private RegulatoryStatusEnum regulatoryStatus;

    /**
     * Maturity date for term deposits and fixed-term accounts
     * Null for non-term accounts
     * Example: 2025-01-15 (January 15, 2025)
     */
    private LocalDate maturityDate;

    /**
     * Method used to calculate interest on the account
     * Examples:
     * - DAILY_COMPOUND: Interest compounds daily
     * - MONTHLY_AVERAGE_BALANCE: Interest based on monthly average
     * - TIERED_RATE: Different rates for different balance tiers
     */
    private InterestAccrualMethodEnum interestAccrualMethod;

    /**
     * Frequency of interest payments to the account
     * Examples:
     * - MONTHLY: Interest paid monthly
     * - QUARTERLY: Interest paid quarterly
     * - AT_MATURITY: Interest paid at maturity (for term deposits)
     */
    private InterestPaymentFrequencyEnum interestPaymentFrequency;

    /**
     * Minimum balance required for the account
     * Zero if no minimum balance is required
     * Example: 500.0000 (Minimum balance of $500)
     */
    private BigDecimal minimumBalance;

    /**
     * Maximum allowed overdraft for the account
     * Zero if no overdraft is allowed
     * Example: 1000.0000 (Overdraft limit of $1,000)
     */
    private BigDecimal overdraftLimit;


}